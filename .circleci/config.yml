version: "2.1"

orbs:
  discord: antonioned/discord@0.1.0

jobs:
  container_pipeline:
    working_directory: /app
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      # ... steps for building/testing app ...
      - setup_remote_docker:
          version: 20.10.14

      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build -f ./asterisk/container/Dockerfile --cache-from=app -t app ./asterisk/container/
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - run:
          name: Run tests
          command: |
            echo "docker-compose -f ./docker-compose.test.yml up"
      # - deploy:
      #     name: Push application Docker image
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #         login="$(aws ecr get-login)"
      #         ${login}
      #         docker tag app "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
      #         docker push "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
      #       fi

workflows:
  version: 2.1
  containers_flow:
    # when: 
    #   not: << pipeline.parameters.dockerize_me >> 
    jobs:
      - container_pipeline
      # - discord_notification:
      #     context: asterisk
      #     requires:
      #       - container_pipeline